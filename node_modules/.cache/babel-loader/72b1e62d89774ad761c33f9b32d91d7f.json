{"ast":null,"code":"import { signInAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nimport { auth, FirebaseTimestamp } from \"../../firebase/index\";\nexport const signIn = () => {\n  return async (dispatch, getState) => {\n    // getState()はreduxのメソッド\n    //　現在のreduxのstate情報を取ってくる\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n\n    if (!isSignedIn) {\n      const url = \"https://api.github.com/users/ShojiroAbe\";\n      const response = await fetch(url).then(res => res.json()).catch(() => null);\n      const username = response.login;\n      dispatch(signInAction({\n        isSignedIn: true,\n        uid: \"00001\",\n        username: username\n      }));\n      dispatch(push(\"/\"));\n    }\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    // Validation\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"必須項目が未入力です\");\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致しません。もう一度お試しください。\");\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const timestamp = FirebaseTimestamp.now();\n        const userInitialData = {\n          created_at: timestamp,\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          updated_at: timestamp,\n          username: username\n        };\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/abeshoujirou/Desktop/ec-app-trahack/src/reducks/users/operations.js"],"names":["signInAction","push","auth","FirebaseTimestamp","signIn","dispatch","getState","state","isSignedIn","users","url","response","fetch","then","res","json","catch","username","login","uid","signUp","email","password","confirmPassword","alert","createUserWithEmailAndPassword","result","user","timestamp","now","userInitialData","created_at","role","updated_at"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,WAA3B;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,SAAQC,IAAR,EAAcC,iBAAd,QAAsC,sBAAtC;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC;AACA;AACA,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYD,UAA/B;;AAEA,QAAI,CAACA,UAAL,EAAiB;AACf,YAAME,GAAG,GAAE,yCAAX;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CACNG,IADM,CACDC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADJ,EAENC,KAFM,CAEA,MAAI,IAFJ,CAAvB;AAIA,YAAMC,QAAQ,GAAGN,QAAQ,CAACO,KAA1B;AAEAb,MAAAA,QAAQ,CAACL,YAAY,CAAC;AACpBQ,QAAAA,UAAU,EAAE,IADQ;AAEpBW,QAAAA,GAAG,EAAE,OAFe;AAGpBF,QAAAA,QAAQ,EAAEA;AAHU,OAAD,CAAb,CAAR;AAKAZ,MAAAA,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;AACD;AACF,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMmB,MAAM,GAAG,CAACH,QAAD,EAAWI,KAAX,EAAkBC,QAAlB,EAA4BC,eAA5B,KAAgD;AACpE,SAAO,MAAOlB,QAAP,IAAoB;AACzB;AACA,QAAIY,QAAQ,KAAK,EAAb,IAAmBI,KAAK,KAAK,EAA7B,IAAmCC,QAAQ,KAAK,EAAhD,IAAsDC,eAAe,KAAK,EAA9E,EAAiF;AAC/EC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,QAAIF,QAAQ,KAAKC,eAAjB,EAAkC;AAChCC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,WAAOtB,IAAI,CAACuB,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,EACNT,IADM,CACDa,MAAM,IAAI;AACd,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,UAAGA,IAAH,EAAQ;AACN,cAAMR,GAAG,GAAGQ,IAAI,CAACR,GAAjB;AACA,cAAMS,SAAS,GAAGzB,iBAAiB,CAAC0B,GAAlB,EAAlB;AAEA,cAAMC,eAAe,GAAG;AACtBC,UAAAA,UAAU,EAAEH,SADU;AAEtBP,UAAAA,KAAK,EAAEA,KAFe;AAGtBW,UAAAA,IAAI,EAAE,UAHgB;AAItBb,UAAAA,GAAG,EAAEA,GAJiB;AAKtBc,UAAAA,UAAU,EAAEL,SALU;AAMtBX,UAAAA,QAAQ,EAAEA;AANY,SAAxB;AAQD;AACF,KAjBM,CAAP;AAkBD,GA9BD;AA+BD,CAhCM","sourcesContent":["import {signInAction} from \"./actions\";\nimport {push} from \"connected-react-router\"\nimport {auth, FirebaseTimestamp} from \"../../firebase/index\"\n\nexport const signIn = () => {\n  return async (dispatch, getState) => {\n    // getState()はreduxのメソッド\n    //　現在のreduxのstate情報を取ってくる\n    const state = getState()\n    const isSignedIn = state.users.isSignedIn\n\n    if (!isSignedIn) {\n      const url =\"https://api.github.com/users/ShojiroAbe\"\n\n      const response = await fetch(url)\n                      .then(res=>res.json())\n                      .catch(()=>null)\n\n      const username = response.login\n\n      dispatch(signInAction({\n        isSignedIn: true,\n        uid: \"00001\",\n        username: username\n      }))\n      dispatch(push(\"/\"))\n    }\n  }\n}\n\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async (dispatch) => {\n    // Validation\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\"){\n      alert(\"必須項目が未入力です\")\n      return false\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致しません。もう一度お試しください。\")\n      return false\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password)\n    .then(result => {\n      const user = result.user\n\n      if(user){\n        const uid = user.uid\n        const timestamp = FirebaseTimestamp.now()\n\n        const userInitialData = {\n          created_at: timestamp,\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          updated_at: timestamp,\n          username: username\n        }\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}